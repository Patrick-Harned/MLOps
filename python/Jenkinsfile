// Uses Declarative syntax to run commands inside a container.
pipeline {
    agent {
        kubernetes {
            // Rather than inline YAML, in a multibranch Pipeline you could use: yamlFile 'jenkins-pod.yaml'
            // Or, to avoid YAML:
            // containerTemplate {
            //     name 'shell'
            //     image 'ubuntu'
            //     command 'sleep'
            //     args 'infinity'
            // }
            yaml '''
apiVersion: v1
kind: Pod
spec:
  containers:
  - name: shell
    image: image-registry.openshift-image-registry.svc:5000/openshift/lowes-python-app@sha256:a302f34058ae3fe03cbdf50634a6d6e140c99fc280794b561c4c53b151fe1d02
    # image:  image-registry.openshift-image-registry.svc:5000/openshift/mlopspipeline:latest
    command:
    - sleep
    args:
    - infinity
'''
            // Can also wrap individual steps:
            // container('shell') {
            //     sh 'hostname'
            // }
            defaultContainer 'shell'
        }
    }
    stages {
        stage('Main') {
            steps {
                sh 'pwd'
                sh 'ls -1a'
                sh 'ls / -1a'
                sh 'ls ./python -1a'
                // config.yaml path is relative the parent dir of main.py
                sh 'python python/src/app/main.py ../../config.yaml'
            }
        }

    }
}

